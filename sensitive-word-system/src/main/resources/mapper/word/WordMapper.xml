<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.houbb.system.mapper.WordMapper">
    
    <resultMap type="Word" id="WordResult">
        <result property="id"    column="id"    />
        <result property="word"    column="word"    />
        <result property="type"    column="type"    />
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateBy"    column="update_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectWordVo">
        select id, word, type, status, remark, create_by, update_by, create_time, update_time from word
    </sql>

    <select id="selectWordList" parameterType="Word" resultMap="WordResult">
        <include refid="selectWordVo"/>
        <where>  
            <if test="word != null  and word != ''"> and word = #{word}</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectWordById" parameterType="Long" resultMap="WordResult">
        <include refid="selectWordVo"/>
        where id = #{id}
    </select>

    <insert id="insertWord" parameterType="Word" useGeneratedKeys="true" keyProperty="id">
        insert into word
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="word != null and word != ''">word,</if>
            <if test="type != null and type != ''">type,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="remark != null and remark != ''">remark,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="word != null and word != ''">#{word},</if>
            <if test="type != null and type != ''">#{type},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="remark != null and remark != ''">#{remark},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateWord" parameterType="Word">
        update word
        <trim prefix="SET" suffixOverrides=",">
            <if test="word != null and word != ''">word = #{word},</if>
            <if test="type != null and type != ''">type = #{type},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteWordById" parameterType="Long">
        delete from word where id = #{id}
    </delete>

    <delete id="deleteWordByIds" parameterType="String">
        delete from word where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>